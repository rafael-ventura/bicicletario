name: CI

trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

jobs:
  - job: BuildTestAnalyzeDeploy
    displayName: 'Build, Test, Analyze and Deploy'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk'
        inputs:
          packageType: sdk
          version: 7.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - script: |
          find . -name 'bin' -type d -exec rm -rf {} +
          find . -name 'obj' -type d -exec rm -rf {} +
        displayName: 'Clean bin and obj folders'

      - task: DotNetCoreCLI@2
        displayName: 'Restore solution'
        inputs:
          command: restore
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Clean solution'
        inputs:
          command: clean
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
          
      - task: DotNetCoreCLI@2
        displayName: 'Build solution'
        inputs:
          command: build
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Test solution'
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'

      # Step to prepare SonarCloud analysis
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'bike'
          organization: 'rafaelventura'
          scannerMode: 'MSBuild'
          projectKey: 'rafael-ventura_bicicletario'
          projectName: 'bicicletario'
          extraProperties: |
            sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
            sonar.coverage.exclusions="**Tests*.cs"
            sonar.login="9970105f3d9489edff4656f4b71b702442066822"

      # Step to analyze with SonarCloud
      - task: SonarCloudAnalyze@1

      # Step to publish the SonarCloud analysis results
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

      # Publishing the project
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration) --output publish_output'
        displayName: 'Publish project'

      - publish: $(System.DefaultWorkingDirectory)/publish_output
        artifact: drop
