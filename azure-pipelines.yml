name: CI

trigger:
  - main
pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  group: bike

jobs:
  - job: BuildTestAnalyzeDeploy
    displayName: 'Build, Test, Analyze and Deploy'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk'
        inputs:
          packageType: sdk
          version: 7.x
          installationPath: $(Agent.ToolsDirectory)/dotnet
      
      # Adicionando a limpeza dos diret√≥rios bin e obj
      - script: |
          find . -name bin -type d | xargs rm -rf
          find . -name obj -type d | xargs rm -rf
        displayName: 'Clean bin and obj folders'

      - task: DotNetCoreCLI@2
        displayName: 'Restore solution'
        inputs:
          command: restore
          projects: 'bicicletario.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Build solution'
        inputs:
          command: build
          projects: 'bicicletario.csproj'
          arguments: '--configuration $(buildConfiguration)'

      # Preparing SonarCloud analysis
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'bike2'
          organization: 'rafaelventura'
          scannerMode: 'MSBuild'
          projectKey: 'rafael-ventura_bicicletario'
          projectName: 'bicicletario'
          extraProperties: |
            sonar.cs.opencover.reportsPaths=coverage/coverage.opencover.xml
            
      
      - task: DotNetCoreCLI@2
        displayName: 'Build solution'
        inputs:
          command: build
          projects: 'bicicletario.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Test solution'
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage" -- DataCollectorConfig:CodeCoverage/CodeCoverage.runsettings'
      
      # Analyzing with SonarCloud
      - task: SonarCloudAnalyze@1

      # Publishing SonarCloud results
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          projects: 'bicicletario.csproj'
          arguments: '--configuration $(buildConfiguration) --output publish_output'
        displayName: 'Publish project'

      - publish: $(System.DefaultWorkingDirectory)/publish_output
        artifact: drop
