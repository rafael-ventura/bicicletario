name: CI
trigger:
  - main
pool:
  vmImage: ubuntu-latest
variables:
  buildConfiguration: 'Release'
jobs:
  - job: BuildTestAnalyzeDeploy
    displayName: 'Build, Test, Analyze and Deploy'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk'
        inputs:
          packageType: sdk
          version: 7.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

          
          displayName: 'Clean bin and obj folders'
      - script: |
          find . -name 'bin' -type d -exec rm -rf {} +
          find . -name 'obj' -type d -exec rm -rf {} +
              
          
          - task: DotNetCoreCLI@2
        displayName: 'Clean solution'
        inputs:
          command: 'run'
          custom: 'clean'
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Restore solution'
        inputs:
          command: restore
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Build solution'
        inputs:
          command: build
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Test solution'
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'

      # Passo para preparar a análise SonarCloud
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'bike'
          organization: 'rafaelventura'
          scannerMode: 'MSBuild'
          projectKey: 'rafael-ventura_bicicletario'
          projectName: 'bicicletario'
          extraProperties: |
            sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
            sonar.coverage.exclusions="**Tests*.cs"
            sonar.login="9970105f3d9489edff4656f4b71b702442066822"

      # Passo para análise SonarCloud
      - task: SonarCloudAnalyze@1

      # Passo para publicar os resultados da análise SonarCloud
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

      # Publicando o projeto
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration) --output publish_output'
        displayName: 'Publish project'

      - publish: $(System.DefaultWorkingDirectory)/publish_output
        artifact: drop
